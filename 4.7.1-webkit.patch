--- origsrc/qt-everywhere-opensource-src-4.7.1/src/3rdparty/javascriptcore/JavaScriptCore/jit/JITStubs.cpp	2010-11-05 20:55:22.000000000 -0500
+++ src/qt-everywhere-opensource-src-4.7.1/src/3rdparty/javascriptcore/JavaScriptCore/jit/JITStubs.cpp	2010-12-25 21:56:33.126035400 -0600
@@ -68,7 +68,7 @@ using namespace std;
 
 namespace JSC {
 
-#if OS(DARWIN) || OS(WINDOWS)
+#if OS(CYGWIN) || OS(DARWIN) || OS(WINDOWS)
 #define SYMBOL_STRING(name) "_" #name
 #else
 #define SYMBOL_STRING(name) #name
--- origsrc/qt-everywhere-opensource-src-4.7.1/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Collector.cpp	2010-11-05 20:55:22.000000000 -0500
+++ src/qt-everywhere-opensource-src-4.7.1/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Collector.cpp	2010-12-25 21:57:50.751770800 -0600
@@ -58,7 +58,7 @@
 #include <e32cmn.h>
 #include <unistd.h>
 
-#elif OS(WINDOWS)
+#elif OS(CYGWIN) || OS(WINDOWS)
 
 #include <windows.h>
 #include <malloc.h>
@@ -622,7 +622,7 @@ static inline void* currentThreadStackBa
     // FIXME: why only for MSVC?
     PNT_TIB64 pTib = reinterpret_cast<PNT_TIB64>(NtCurrentTeb());
     return reinterpret_cast<void*>(pTib->StackBase);
-#elif OS(WINDOWS) && CPU(X86) && COMPILER(GCC)
+#elif (OS(CYGWIN) || OS(WINDOWS)) && CPU(X86) && COMPILER(GCC)
     // offset 0x18 from the FS segment register gives a pointer to
     // the thread information block for the current thread
     NT_TIB* pTib;
--- origsrc/qt-everywhere-opensource-src-4.7.1/src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h	2010-11-05 20:55:22.000000000 -0500
+++ src/qt-everywhere-opensource-src-4.7.1/src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h	2010-12-25 22:12:19.865685300 -0600
@@ -340,6 +340,11 @@
 #define WTF_OS_AIX 1
 #endif
 
+/* OS(CYGWIN) - Cygwin */
+#ifdef __CYGWIN__
+#define WTF_OS_CYGWIN 1
+#endif
+
 /* OS(DARWIN) - Any Darwin-based OS, including Mac OS X and iPhone OS */
 #ifdef __APPLE__
 #define WTF_OS_DARWIN 1
@@ -438,6 +443,7 @@
 /* OS(UNIX) - Any Unix-like system */
 #if   OS(AIX)              \
     || OS(ANDROID)          \
+    || OS(CYGWIN)           \
     || OS(DARWIN)           \
     || OS(FREEBSD)          \
     || OS(HAIKU)            \
@@ -690,7 +696,7 @@
 
 #if !OS(WINDOWS) && !OS(SOLARIS) && !OS(QNX) \
     && !OS(SYMBIAN) && !OS(HAIKU) && !OS(RVCT) \
-    && !OS(ANDROID) && !OS(AIX) && !OS(HPUX)
+    && !OS(ANDROID) && !OS(AIX) && !OS(HPUX) && !OS(CYGWIN)
 #define HAVE_TM_GMTOFF 1
 #define HAVE_TM_ZONE 1
 #define HAVE_TIMEGM 1
@@ -874,7 +880,7 @@
 #define WTF_USE_JSVALUE64 1
 #elif CPU(ARM) || CPU(PPC64)
 #define WTF_USE_JSVALUE32 1
-#elif OS(WINDOWS) && COMPILER(MINGW)
+#elif OS(CYGWIN) || (OS(WINDOWS) && COMPILER(MINGW))
 /* Using JSVALUE32_64 causes padding/alignement issues for JITStubArg
 on MinGW. See https://bugs.webkit.org/show_bug.cgi?id=29268 */
 #define WTF_USE_JSVALUE32 1
@@ -909,6 +915,9 @@ on MinGW. See https://bugs.webkit.org/sh
 #elif CPU(X86) && OS(DARWIN)
     #define ENABLE_JIT 1
     #define WTF_USE_JIT_STUB_ARGUMENT_VA_LIST 1
+#elif CPU(X86) && OS(CYGWIN) && GCC_VERSION >= 40100
+    #define ENABLE_JIT 1
+    #define WTF_USE_JIT_STUB_ARGUMENT_VA_LIST 1
 #elif CPU(X86) && OS(WINDOWS) && COMPILER(MINGW) && GCC_VERSION >= 40100
     #define ENABLE_JIT 1
     #define WTF_USE_JIT_STUB_ARGUMENT_VA_LIST 1
--- origsrc/qt-everywhere-opensource-src-4.7.1/src/3rdparty/webkit/JavaScriptCore/jit/JITStubs.cpp	2010-11-05 20:55:20.000000000 -0500
+++ src/qt-everywhere-opensource-src-4.7.1/src/3rdparty/webkit/JavaScriptCore/jit/JITStubs.cpp	2010-12-25 22:17:39.859042500 -0600
@@ -65,7 +65,7 @@ using namespace std;
 
 namespace JSC {
 
-#if OS(DARWIN) || OS(WINDOWS)
+#if OS(CYGWIN) || OS(DARWIN) || OS(WINDOWS)
 #define SYMBOL_STRING(name) "_" #name
 #else
 #define SYMBOL_STRING(name) #name
--- origsrc/qt-everywhere-opensource-src-4.7.1/src/3rdparty/webkit/JavaScriptCore/runtime/Collector.cpp	2010-11-05 20:55:19.000000000 -0500
+++ src/qt-everywhere-opensource-src-4.7.1/src/3rdparty/webkit/JavaScriptCore/runtime/Collector.cpp	2010-12-25 22:18:23.585918700 -0600
@@ -53,7 +53,7 @@
 #include <mach/thread_act.h>
 #include <mach/vm_map.h>
 
-#elif OS(WINDOWS)
+#elif OS(CYGWIN) || OS(WINDOWS)
 
 #include <windows.h>
 #include <malloc.h>
@@ -546,7 +546,7 @@ static inline void* currentThreadStackBa
         MOV pTib, EAX
     }
     return static_cast<void*>(pTib->StackBase);
-#elif OS(WINDOWS) && CPU(X86) && COMPILER(GCC)
+#elif (OS(CYGWIN) || OS(WINDOWS)) && CPU(X86) && COMPILER(GCC)
     // offset 0x18 from the FS segment register gives a pointer to
     // the thread information block for the current thread
     NT_TIB* pTib;
--- origsrc/qt-everywhere-opensource-src-4.7.1/src/3rdparty/webkit/JavaScriptCore/wtf/Platform.h	2010-11-05 20:55:19.000000000 -0500
+++ src/qt-everywhere-opensource-src-4.7.1/src/3rdparty/webkit/JavaScriptCore/wtf/Platform.h	2010-12-25 22:20:29.582538500 -0600
@@ -325,6 +325,11 @@
 #define WTF_OS_AIX 1
 #endif
 
+/* OS(CYGWIN) - Cygwin */
+#ifdef __CYGWIN__
+#define WTF_OS_CYGWIN 1
+#endif
+
 /* OS(DARWIN) - Any Darwin-based OS, including Mac OS X and iPhone OS */
 #ifdef __APPLE__
 #define WTF_OS_DARWIN 1
@@ -412,6 +417,7 @@
 /* OS(UNIX) - Any Unix-like system */
 #if   OS(AIX)              \
     || OS(ANDROID)          \
+    || OS(CYGWIN)           \
     || OS(DARWIN)           \
     || OS(FREEBSD)          \
     || OS(HAIKU)            \
@@ -685,7 +691,7 @@
 
 #if !OS(WINDOWS) && !OS(SOLARIS) && !OS(QNX) \
     && !OS(SYMBIAN) && !OS(HAIKU) && !OS(RVCT) \
-    && !OS(ANDROID) && !PLATFORM(BREWMP)
+    && !OS(ANDROID) && !PLATFORM(BREWMP) && !OS(CYGWIN)
 #define HAVE_TM_GMTOFF 1
 #define HAVE_TM_ZONE 1
 #define HAVE_TIMEGM 1
@@ -889,7 +895,7 @@
 #define WTF_USE_JSVALUE64 1
 #elif CPU(ARM) || CPU(PPC64) || CPU(MIPS)
 #define WTF_USE_JSVALUE32 1
-#elif OS(WINDOWS) && COMPILER(MINGW)
+#elif OS(CYGWIN) || (OS(WINDOWS) && COMPILER(MINGW))
 /* Using JSVALUE32_64 causes padding/alignement issues for JITStubArg
 on MinGW. See https://bugs.webkit.org/show_bug.cgi?id=29268 */
 #define WTF_USE_JSVALUE32 1
@@ -927,6 +933,9 @@ on MinGW. See https://bugs.webkit.org/sh
 #elif CPU(X86) && OS(DARWIN)
     #define ENABLE_JIT 1
     #define WTF_USE_JIT_STUB_ARGUMENT_VA_LIST 1
+#elif CPU(X86) && OS(CYGWIN) && GCC_VERSION >= 40100
+    #define ENABLE_JIT 1
+    #define WTF_USE_JIT_STUB_ARGUMENT_VA_LIST 1
 #elif CPU(X86) && OS(WINDOWS) && COMPILER(MINGW) && GCC_VERSION >= 40100
     #define ENABLE_JIT 1
     #define WTF_USE_JIT_STUB_ARGUMENT_VA_LIST 1
--- origsrc/qt-everywhere-opensource-src-4.7.2/src/3rdparty/webkit/JavaScriptCore/wtf/StringExtras.h	2011-02-22 06:03:55.000000000 -0600
+++ src/qt-everywhere-opensource-src-4.7.2/src/3rdparty/webkit/JavaScriptCore/wtf/StringExtras.h	2011-03-24 23:32:43.426713900 -0500
@@ -86,7 +86,7 @@
 
 #endif
 
-#if OS(WINDOWS) || OS(LINUX) || OS(SOLARIS)
+#if OS(WINDOWS) || OS(LINUX) || OS(SOLARIS) || OS(CYGWIN)
 // FIXME: should check HAVE_STRNSTR
 
 inline char* strnstr(const char* buffer, const char* target, size_t bufferLength)
--- origsrc/qt-everywhere-opensource-src-4.7.1/src/3rdparty/webkit/WebCore/plugins/PluginDatabase.cpp	2010-11-05 20:55:22.000000000 -0500
+++ src/qt-everywhere-opensource-src-4.7.1/src/3rdparty/webkit/WebCore/plugins/PluginDatabase.cpp	2010-12-25 22:21:30.665042400 -0600
@@ -410,7 +410,9 @@ void PluginDatabase::getPluginPathsInDir
     // FIXME: This should be a case insensitive set.
     HashSet<String> uniqueFilenames;
 
-#if defined(XP_UNIX)
+#if defined(__CYGWIN__)
+    String fileNameFilter("*.dll");
+#elif defined(XP_UNIX)
     String fileNameFilter("*.so");
 #else
     String fileNameFilter("");
