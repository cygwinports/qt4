--- origsrc/qt-x11-opensource-src-4.5.1/src/3rdparty/webkit/JavaScriptCore/runtime/Collector.cpp	2009-04-21 18:57:38.000000000 -0500
+++ src/qt-x11-opensource-src-4.5.1/src/3rdparty/webkit/JavaScriptCore/runtime/Collector.cpp	2009-04-29 22:33:27.201500000 -0500
@@ -46,7 +46,7 @@
 #include <mach/thread_act.h>
 #include <mach/vm_map.h>
 
-#elif PLATFORM(WIN_OS)
+#elif PLATFORM(WIN_OS) || PLATFORM(CYGWIN)
 
 #include <windows.h>
 
@@ -204,7 +204,7 @@ static NEVER_INLINE CollectorBlock* allo
     // no memory map in symbian, need to hack with fastMalloc
     void* address = fastMalloc(BLOCK_SIZE);
     memset(reinterpret_cast<void*>(address), 0, BLOCK_SIZE);
-#elif PLATFORM(WIN_OS)
+#elif PLATFORM(WIN_OS) || PLATFORM(CYGWIN)
      // windows virtual address granularity is naturally 64k
     LPVOID address = VirtualAlloc(NULL, BLOCK_SIZE, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);
 #elif HAVE(POSIX_MEMALIGN)
@@ -248,7 +248,7 @@ static void freeBlock(CollectorBlock* bl
     vm_deallocate(current_task(), reinterpret_cast<vm_address_t>(block), BLOCK_SIZE);
 #elif PLATFORM(SYMBIAN)
     fastFree(block);
-#elif PLATFORM(WIN_OS)
+#elif PLATFORM(WIN_OS) || PLATFORM(CYGWIN)
     VirtualFree(block, 0, MEM_RELEASE);
 #elif HAVE(POSIX_MEMALIGN)
     free(block);
@@ -466,7 +466,7 @@ static inline void* currentThreadStackBa
 #elif PLATFORM(WIN_OS) && PLATFORM(X86_64) && COMPILER(MSVC)
     PNT_TIB64 pTib = reinterpret_cast<PNT_TIB64>(NtCurrentTeb());
     return reinterpret_cast<void*>(pTib->StackBase);
-#elif PLATFORM(WIN_OS) && PLATFORM(X86) && COMPILER(GCC)
+#elif (PLATFORM(WIN_OS) || PLATFORM(CYGWIN)) && PLATFORM(X86) && COMPILER(GCC)
     // offset 0x18 from the FS segment register gives a pointer to
     // the thread information block for the current thread
     NT_TIB* pTib;
--- origsrc/qt-x11-opensource-src-4.5.1/src/3rdparty/webkit/JavaScriptCore/runtime/DateMath.h	2009-04-21 18:57:38.000000000 -0500
+++ src/qt-x11-opensource-src-4.5.1/src/3rdparty/webkit/JavaScriptCore/runtime/DateMath.h	2009-04-29 22:27:13.967125000 -0500
@@ -113,7 +113,7 @@ struct GregorianDateTime : Noncopyable {
         , year(inTm.tm_year)
         , isDST(inTm.tm_isdst)
     {
-#if !PLATFORM(WIN_OS) && !PLATFORM(SOLARIS) && !COMPILER(RVCT)
+#if !PLATFORM(WIN_OS) && !PLATFORM(SOLARIS) && !COMPILER(RVCT) && !PLATFORM(CYGWIN)
         utcOffset = static_cast<int>(inTm.tm_gmtoff);
 
         int inZoneSize = strlen(inTm.tm_zone) + 1;
@@ -140,7 +140,7 @@ struct GregorianDateTime : Noncopyable {
         ret.tm_year  =  year;
         ret.tm_isdst =  isDST;
 
-#if !PLATFORM(WIN_OS) && !PLATFORM(SOLARIS) && !COMPILER(RVCT)
+#if !PLATFORM(WIN_OS) && !PLATFORM(SOLARIS) && !COMPILER(RVCT) && !PLATFORM(CYGWIN)
         ret.tm_gmtoff = static_cast<long>(utcOffset);
         ret.tm_zone = timeZone;
 #endif
--- origsrc/qt-x11-opensource-src-4.5.1/src/3rdparty/webkit/JavaScriptCore/wtf/Platform.h	2009-04-21 18:57:39.000000000 -0500
+++ src/qt-x11-opensource-src-4.5.1/src/3rdparty/webkit/JavaScriptCore/wtf/Platform.h	2009-04-29 22:34:43.592125000 -0500
@@ -42,6 +42,13 @@
 #define WTF_PLATFORM_DARWIN 1
 #endif
 
+/* PLATFORM(CYGWIN) */
+/* Operating system level dependencies for Cygwin that should */
+/* be used regardless of operating environment */
+#ifdef __CYGWIN__
+#define WTF_PLATFORM_CYGWIN 1
+#endif
+
 /* PLATFORM(WIN_OS) */
 /* Operating system level dependencies for Windows that should be used */
 /* regardless of operating environment */
@@ -100,6 +107,7 @@
 /* Operating system level dependencies for Unix-like systems that */
 /* should be used regardless of operating environment */
 #if   PLATFORM(DARWIN)     \
+   || PLATFORM(CYGWIN)     \
    || PLATFORM(FREEBSD)    \
    || PLATFORM(S60)        \
    || PLATFORM(NETBSD)     \
--- qt4-4.5.1-1/origsrc/qt-x11-opensource-src-4.5.1/src/3rdparty/webkit/WebCore/plugins/PluginDatabase.cpp	2009-05-28 02:13:03.931817400 -0500
+++ qt4-4.5.1-1/src/qt-x11-opensource-src-4.5.1/src/3rdparty/webkit/WebCore/plugins/PluginDatabase.cpp	2009-05-28 02:12:49.322981800 -0500
@@ -351,7 +351,9 @@ void PluginDatabase::getPluginPathsInDir
     // FIXME: This should be a case insensitive set.
     HashSet<String> uniqueFilenames;
 
-#if defined(XP_UNIX)
+#if defined(__CYGWIN__)
+    String fileNameFilter("*.dll");
+#elif defined(XP_UNIX)
     String fileNameFilter("*.so");
 #else
     String fileNameFilter("");
