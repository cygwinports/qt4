--- origsrc/qt-everywhere-opensource-src-4.6.2/src/3rdparty/javascriptcore/JavaScriptCore/jit/JITOpcodes.cpp	2010-02-11 09:55:20.000000000 -0600
+++ src/qt-everywhere-opensource-src-4.6.2/src/3rdparty/javascriptcore/JavaScriptCore/jit/JITOpcodes.cpp	2010-04-11 21:21:52.465713600 -0500
@@ -34,6 +34,7 @@
 #include "JSCell.h"
 #include "JSFunction.h"
 #include "LinkBuffer.h"
+#include <limits.h>
 
 namespace JSC {
 
--- origsrc/qt-everywhere-opensource-src-4.6.2/src/3rdparty/javascriptcore/JavaScriptCore/jit/JITPropertyAccess.cpp	2010-02-11 09:55:20.000000000 -0600
+++ src/qt-everywhere-opensource-src-4.6.2/src/3rdparty/javascriptcore/JavaScriptCore/jit/JITPropertyAccess.cpp	2010-04-11 21:21:52.474714100 -0500
@@ -38,6 +38,7 @@
 #include "RepatchBuffer.h"
 #include "ResultType.h"
 #include "SamplingTool.h"
+#include <limits.h>
 
 #ifndef NDEBUG
 #include <stdio.h>
--- origsrc/qt-everywhere-opensource-src-4.6.2/src/3rdparty/javascriptcore/JavaScriptCore/jit/JITStubs.cpp	2010-02-11 09:55:20.000000000 -0600
+++ src/qt-everywhere-opensource-src-4.6.2/src/3rdparty/javascriptcore/JavaScriptCore/jit/JITStubs.cpp	2010-04-11 21:21:52.483714600 -0500
@@ -56,6 +56,7 @@
 #include "RegExpPrototype.h"
 #include "Register.h"
 #include "SamplingTool.h"
+#include <limits.h>
 #include <stdarg.h>
 #include <stdio.h>
 
@@ -67,7 +68,7 @@ using namespace std;
 
 namespace JSC {
 
-#if PLATFORM(DARWIN) || PLATFORM(WIN_OS)
+#if PLATFORM(DARWIN) || PLATFORM(WIN_OS) || PLATFORM(CYGWIN)
 #define SYMBOL_STRING(name) "_" #name
 #else
 #define SYMBOL_STRING(name) #name
--- origsrc/qt-everywhere-opensource-src-4.6.2/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Collector.cpp	2010-02-11 09:55:20.000000000 -0600
+++ src/qt-everywhere-opensource-src-4.6.2/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Collector.cpp	2010-04-11 21:12:40.215126600 -0500
@@ -57,7 +57,7 @@
 #include <e32cmn.h>
 #include <unistd.h>
 
-#elif PLATFORM(WIN_OS)
+#elif PLATFORM(WIN_OS) || PLATFORM(CYGWIN)
 
 #include <windows.h>
 #include <malloc.h>
@@ -620,7 +620,7 @@ static inline void* currentThreadStackBa
 #elif PLATFORM(WIN_OS) && PLATFORM(X86_64) && COMPILER(MSVC)
     PNT_TIB64 pTib = reinterpret_cast<PNT_TIB64>(NtCurrentTeb());
     return reinterpret_cast<void*>(pTib->StackBase);
-#elif PLATFORM(WIN_OS) && PLATFORM(X86) && COMPILER(GCC)
+#elif (PLATFORM(WIN_OS) || PLATFORM(CYGWIN)) && PLATFORM(X86) && COMPILER(GCC)
     // offset 0x18 from the FS segment register gives a pointer to
     // the thread information block for the current thread
     NT_TIB* pTib;
--- origsrc/qt-everywhere-opensource-src-4.6.2/src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h	2010-02-11 09:55:20.000000000 -0600
+++ src/qt-everywhere-opensource-src-4.6.2/src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h	2010-04-11 21:22:16.604094200 -0500
@@ -50,6 +50,13 @@
 #include <TargetConditionals.h>
 #endif
 
+/* PLATFORM(CYGWIN) */
+/* Operating system level dependencies for Cygwin that should */
+/* be used regardless of operating environment */
+#ifdef __CYGWIN__
+#define WTF_PLATFORM_CYGWIN 1
+#endif
+
 /* PLATFORM(WIN_OS) */
 /* Operating system level dependencies for Windows that should be used */
 /* regardless of operating environment */
@@ -140,6 +147,7 @@
 /* Operating system level dependencies for Unix-like systems that */
 /* should be used regardless of operating environment */
 #if   PLATFORM(DARWIN)     \
+   || PLATFORM(CYGWIN)     \
    || PLATFORM(FREEBSD)    \
    || PLATFORM(SYMBIAN)    \
    || PLATFORM(NETBSD)     \
@@ -559,7 +567,7 @@
 #define HAVE_SIGNAL_H 1
 #endif
 
-#if !PLATFORM(WIN_OS) && !PLATFORM(SOLARIS) && !PLATFORM(QNX) \
+#if !PLATFORM(WIN_OS) && !PLATFORM(SOLARIS) && !PLATFORM(QNX) && !PLATFORM(CYGWIN) \
     && !PLATFORM(SYMBIAN) && !PLATFORM(HAIKU) && !COMPILER(RVCT) && !PLATFORM(AIX) \
     && !PLATFORM(HPUX)
 #define HAVE_TM_GMTOFF 1
@@ -724,7 +732,7 @@
 #define WTF_USE_JSVALUE64 1
 #elif PLATFORM(AIX64)
 #define WTF_USE_JSVALUE64 1
-#elif PLATFORM(ARM) || PLATFORM(PPC64)
+#elif PLATFORM(ARM) || PLATFORM(PPC64) || PLATFORM(CYGWIN)
 #define WTF_USE_JSVALUE32 1
 #elif PLATFORM(WIN_OS) && COMPILER(MINGW)
 /* Using JSVALUE32_64 causes padding/alignement issues for JITStubArg
@@ -745,7 +753,7 @@ on MinGW. See https://bugs.webkit.org/sh
 #if PLATFORM(X86_64) && PLATFORM(MAC)
     #define ENABLE_JIT 1
 /* The JIT is tested & working on x86 Mac */
-#elif PLATFORM(X86) && PLATFORM(MAC)
+#elif PLATFORM(X86) && (PLATFORM(MAC) || PLATFORM(CYGWIN))
     #define ENABLE_JIT 1
     #define WTF_USE_JIT_STUB_ARGUMENT_VA_LIST 1
 #elif PLATFORM(ARM_THUMB2) && PLATFORM(IPHONE)
--- origsrc/qt-everywhere-opensource-src-4.6.2/src/3rdparty/webkit/JavaScriptCore/jit/JITOpcodes.cpp	2010-02-11 09:55:17.000000000 -0600
+++ src/qt-everywhere-opensource-src-4.6.2/src/3rdparty/webkit/JavaScriptCore/jit/JITOpcodes.cpp	2010-04-04 03:01:30.289165600 -0500
@@ -35,6 +35,7 @@
 #include "JSFunction.h"
 #include "JSPropertyNameIterator.h"
 #include "LinkBuffer.h"
+#include <limits.h>
 
 namespace JSC {
 
--- origsrc/qt-everywhere-opensource-src-4.6.2/src/3rdparty/webkit/JavaScriptCore/jit/JITPropertyAccess.cpp	2010-02-11 09:55:17.000000000 -0600
+++ src/qt-everywhere-opensource-src-4.6.2/src/3rdparty/webkit/JavaScriptCore/jit/JITPropertyAccess.cpp	2010-04-04 03:00:53.935086200 -0500
@@ -39,6 +39,7 @@
 #include "RepatchBuffer.h"
 #include "ResultType.h"
 #include "SamplingTool.h"
+#include <limits.h>
 
 #ifndef NDEBUG
 #include <stdio.h>
--- origsrc/qt-everywhere-opensource-src-4.6.2/src/3rdparty/webkit/JavaScriptCore/jit/JITStubs.cpp	2010-04-04 01:30:28.369761600 -0500
+++ src/qt-everywhere-opensource-src-4.6.2/src/3rdparty/webkit/JavaScriptCore/jit/JITStubs.cpp	2010-04-04 02:59:46.278216500 -0500
@@ -56,6 +56,7 @@
 #include "RegExpPrototype.h"
 #include "Register.h"
 #include "SamplingTool.h"
+#include <limits.h>
 #include <stdarg.h>
 #include <stdio.h>
 
--- origsrc/qt-everywhere-opensource-src-4.6.2/src/3rdparty/webkit/JavaScriptCore/wtf/MathExtras.h	2010-02-11 09:55:17.000000000 -0600
+++ src/qt-everywhere-opensource-src-4.6.2/src/3rdparty/webkit/JavaScriptCore/wtf/MathExtras.h	2010-04-04 13:47:08.678874700 -0500
@@ -100,10 +100,15 @@ inline bool signbit(double x) { struct i
 
 #endif
 
-#if COMPILER(MSVC) || COMPILER(RVCT)
+#if COMPILER(MSVC) || COMPILER(RVCT) || PLATFORM(CYGWIN)
 
 inline long long llround(double num) { return static_cast<long long>(num > 0 ? num + 0.5 : ceil(num - 0.5)); }
 inline long long llroundf(float num) { return static_cast<long long>(num > 0 ? num + 0.5f : ceil(num - 0.5f)); }
+
+#endif
+
+#if COMPILER(MSVC) || COMPILER(RVCT)
+
 inline long lround(double num) { return static_cast<long>(num > 0 ? num + 0.5 : ceil(num - 0.5)); }
 inline long lroundf(float num) { return static_cast<long>(num > 0 ? num + 0.5f : ceilf(num - 0.5f)); }
 inline double round(double num) { return num > 0 ? floor(num + 0.5) : ceil(num - 0.5); }
--- origsrc/qt-x11-opensource-src-4.5.1/src/3rdparty/webkit/JavaScriptCore/runtime/Collector.cpp	2009-04-21 18:57:38.000000000 -0500
+++ src/qt-x11-opensource-src-4.5.1/src/3rdparty/webkit/JavaScriptCore/runtime/Collector.cpp	2009-04-29 22:33:27.201500000 -0500
@@ -46,7 +46,7 @@
 #include <mach/thread_act.h>
 #include <mach/vm_map.h>
 
-#elif PLATFORM(WIN_OS)
+#elif PLATFORM(WIN_OS) || PLATFORM(CYGWIN)
 
 #include <windows.h>
 
@@ -466,7 +466,7 @@ static inline void* currentThreadStackBa
 #elif PLATFORM(WIN_OS) && PLATFORM(X86_64) && COMPILER(MSVC)
     PNT_TIB64 pTib = reinterpret_cast<PNT_TIB64>(NtCurrentTeb());
     return reinterpret_cast<void*>(pTib->StackBase);
-#elif PLATFORM(WIN_OS) && PLATFORM(X86) && COMPILER(GCC)
+#elif (PLATFORM(WIN_OS) || PLATFORM(CYGWIN)) && PLATFORM(X86) && COMPILER(GCC)
     // offset 0x18 from the FS segment register gives a pointer to
     // the thread information block for the current thread
     NT_TIB* pTib;
--- origsrc/qt-x11-opensource-src-4.6.2/src/3rdparty/webkit/JavaScriptCore/jit/JITStubs.cpp
+++ src/qt-x11-opensource-src-4.6.2/src/3rdparty/webkit/JavaScriptCore/jit/JITStubs.cpp
@@ -49,7 +49,7 @@ COMPILE_ASSERT(STUB_ARGS_callFrame == 0x
 
 namespace JSC {
 
-#if PLATFORM(DARWIN) || PLATFORM(WIN_OS)
+#if PLATFORM(DARWIN) || PLATFORM(WIN_OS) || PLATFORM(CYGWIN)
 #define SYMBOL_STRING(name) "_" #name
 #else
 #define SYMBOL_STRING(name) #name
--- origsrc/qt-x11-opensource-src-4.5.1/src/3rdparty/webkit/JavaScriptCore/wtf/Platform.h	2009-04-21 18:57:39.000000000 -0500
+++ src/qt-x11-opensource-src-4.5.1/src/3rdparty/webkit/JavaScriptCore/wtf/Platform.h	2009-04-29 22:34:43.592125000 -0500
@@ -42,6 +42,13 @@
 #define WTF_PLATFORM_DARWIN 1
 #endif
 
+/* PLATFORM(CYGWIN) */
+/* Operating system level dependencies for Cygwin that should */
+/* be used regardless of operating environment */
+#ifdef __CYGWIN__
+#define WTF_PLATFORM_CYGWIN 1
+#endif
+
 /* PLATFORM(WIN_OS) */
 /* Operating system level dependencies for Windows that should be used */
 /* regardless of operating environment */
@@ -100,6 +107,7 @@
 /* Operating system level dependencies for Unix-like systems that */
 /* should be used regardless of operating environment */
 #if   PLATFORM(DARWIN)     \
+   || PLATFORM(CYGWIN)     \
    || PLATFORM(FREEBSD)    \
    || PLATFORM(S60)        \
    || PLATFORM(NETBSD)     \
@@ -446,7 +454,7 @@
     #define ENABLE_JIT_OPTIMIZE_PROPERTY_ACCESS 1
     #define WTF_USE_ALTERNATE_JSIMMEDIATE 1
 /* The JIT is tested & working on x86 Mac */
-#elif PLATFORM(X86) && PLATFORM(MAC)
+#elif PLATFORM(X86) && (PLATFORM(MAC) || PLATFORM(CYGWIN))
     #define ENABLE_JIT 1
     #define WTF_USE_JIT_STUB_ARGUMENT_VA_LIST 1
     #define ENABLE_JIT_OPTIMIZE_CALL 1
@@ -571,7 +571,7 @@
 #define HAVE_SIGNAL_H 1
 #endif
 
-#if !PLATFORM(WIN_OS) && !PLATFORM(SOLARIS) && !PLATFORM(QNX) \
+#if !PLATFORM(WIN_OS) && !PLATFORM(SOLARIS) && !PLATFORM(QNX) && !PLATFORM(CYGWIN) \
     && !PLATFORM(SYMBIAN) && !PLATFORM(HAIKU) && !COMPILER(RVCT)
 #define HAVE_TM_GMTOFF 1
 #define HAVE_TM_ZONE 1
@@ -739,7 +739,7 @@
 #if !defined(WTF_USE_JSVALUE64) && !defined(WTF_USE_JSVALUE32) && !defined(WTF_USE_JSVALUE32_64)
 #if (PLATFORM(X86_64) && (PLATFORM(UNIX) || PLATFORM(WIN_OS))) || PLATFORM(IA64) || PLATFORM(ALPHA)
 #define WTF_USE_JSVALUE64 1
-#elif PLATFORM(ARM) || PLATFORM(PPC64)
+#elif PLATFORM(ARM) || PLATFORM(PPC64) || PLATFORM(CYGWIN)
 #define WTF_USE_JSVALUE32 1
 #elif PLATFORM(WIN_OS) && COMPILER(MINGW)
 /* Using JSVALUE32_64 causes padding/alignement issues for JITStubArg
--- origsrc/qt-x11-opensource-src-4.5.1/src/3rdparty/webkit/WebCore/plugins/PluginDatabase.cpp	2009-05-28 02:13:03.931817400 -0500
+++ src/qt-x11-opensource-src-4.5.1/src/3rdparty/webkit/WebCore/plugins/PluginDatabase.cpp	2009-05-28 02:12:49.322981800 -0500
@@ -351,7 +351,9 @@ void PluginDatabase::getPluginPathsInDir
     // FIXME: This should be a case insensitive set.
     HashSet<String> uniqueFilenames;
 
-#if defined(XP_UNIX)
+#if defined(__CYGWIN__)
+    String fileNameFilter("*.dll");
+#elif defined(XP_UNIX)
     String fileNameFilter("*.so");
 #else
     String fileNameFilter("");
